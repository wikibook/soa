<?xml version="1.0" encoding="UTF-8"?>
<project name="common-build" basedir=".">

  <property environment="env"/>
  <property name="glassfish.appsvr" value="${env.GLASSFISH_HOME}"/>
  <property name="glassfish.host" value="localhost"/>
  <property name="glassfish.domain" value="domain1"/>
  <property name="glassfish.admin.port" value="4848"/>
  <property name="glassfish.deploy.port" value="8080"/>
  <property name="glassfish.admin.user" value="admin"/>
  <property name="glassfish.admin.password.file" value="c:/soabook/code/book-code/glassfish.password"/>

  <!-- WINDOWS vs. LINUX file names -->
  <condition property="asadmin_tool" value="asadmin.bat" else="asadmin">
    <os family="windows" />
  </condition>
  <condition property="wsimport_tool" value="wsimport.bat" else="wsimport">
    <os family="windows" />
  </condition>
  <condition property="xjc_tool" value="xjc.bat" else="xjc">
    <os family="windows" />
  </condition>

  <condition property="wsgen_tool" value="wsgen.bat" else="wsgen">
    <os family="windows" />
  </condition>

  <condition property="mvn_tool" value="mvn.bat" else="mvn">
    <os family="windows" />
  </condition>

  <!-- Executable Definitions -->
  <property name="wsimport" value="${glassfish.appsvr}/bin/${wsimport_tool}" />
  <property name="xjc" value="${glassfish.appsvr}/bin/${xjc_tool}" />
  <property name="wsgen" value="${glassfish.appsvr}/bin/${wsgen_tool}" />
  <property name="asadmin" value="${glassfish.appsvr}/bin/${asadmin_tool}" />
  <property name="mvn" value="${env.M2_HOME}/bin/${mvn_tool}"/>

  <!-- Standard Directories -->
  <property name="java.generated" value="target/generated/src/main/java" />

  <!-- Paths -->
  <path id="glassfish.webservices.path">
    <fileset dir="${glassfish.appsvr}/lib">
      <include name="javaee.jar"/>
      <include name="webservices-rt.jar"/>
      <include name="activation.jar"/>
    </fileset>
  </path>

  <!-- GlassFish Administration -->
  <target name="deploy-glassfish">
    <echo message="deploying ${artifact}" />
    <exec executable="${asadmin}" failonerror="true">
      <arg value="deploy" />
      <arg line="--host ${glassfish.host}" />
      <arg line="--port ${glassfish.admin.port}" />
      <arg line="--user ${glassfish.admin.user}" />
      <arg line="--passwordfile ${glassfish.admin.password.file}" />
      <arg value="${artifact}" />
    </exec>
  </target>
  <target name="undeploy-glassfish">
    <echo message="undeploying ${module}" />
    <exec executable="${asadmin}" failonerror="true">
      <arg value="undeploy" />
    <arg line="--host ${glassfish.host}" />
    <arg line="--port ${glassfish.admin.port}" />
      <arg line="--user ${glassfish.admin.user}" />
      <arg line="--passwordfile ${glassfish.admin.password.file}" />
      <arg value="${module}" />
    </exec>
  </target>
  <target name="deploy" depends="deploy-glassfish"/>
  <target name="undeploy" depends="undeploy-glassfish"/>
        <target name="redeploy" depends="undeploy, deploy"/>
        <target name="rebuild-redeploy">
          <exec executable="${mvn}">
      <arg value="install"/>
          </exec>
          <antcall target="redeploy"/>
        </target>


  <target name="start-glassfish">
    <exec executable="${asadmin}" failonerror="false" spawn="true">
      <arg value="start-domain" />
      <arg value="${glassfish.domain}" />
    </exec>
  </target>

  <!-- start with debug listener on default port of 9009 -->
  <target name="start-glassfish-debug">
    <exec executable="${asadmin}" failonerror="false" spawn="true">
      <arg value="start-domain" />
      <arg line="--debug=true" />
      <arg value="${glassfish.domain}" />
    </exec>
  </target>

  <target name="stop-glassfish">
    <exec executable="${asadmin}" failonerror="false">
      <arg line="stop-domain ${glassfish.domain}" />
    </exec>
  </target>
  
  <target name="restart-glassfish" depends="stop-glassfish, start-glassfish"/>


  <!-- Display Help -->
  <target name="xjc-help">
    <exec executable="${xjc}">
      <arg value="-help" />
    </exec>
  </target>
  <target name="wsimport-help">
    <exec executable="${wsimport}">
      <arg value="-help" />
    </exec>
  </target>
  <target name="wsgen-help">
    <exec executable="${wsgen}">
      <arg value="-help" />
    </exec>
  </target>

</project>
